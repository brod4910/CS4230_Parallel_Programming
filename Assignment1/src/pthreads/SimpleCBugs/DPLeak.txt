This happens because we did not free the 3 arrays that we allocated.


bash-4.2$ g++ PThreadDPLeak.c
bash-4.2$   valgrind --leak-check=yes a.out
valgrind: a.out: command not found
bash-4.2$   valgrind --leak-check=yes ./a.out
==7525== Memcheck, a memory error detector
==7525== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==7525== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==7525== Command: ./a.out
==7525==
Please provide Exp for array sizes and threshold sep by a comma
3,8
Will do DP of 8 sized arrays
Filling arrays now
Serial dot product is 32034
Now invoking parallel dot product
i,A[],B[],C[],Thres,L,H = 0,57,45,0,8,0,8
i,A[],B[],C[],Thres,L,H = 1,127,3,0,8,0,8
i,A[],B[],C[],Thres,L,H = 2,31,15,0,8,0,8
i,A[],B[],C[],Thres,L,H = 3,113,103,0,8,0,8
i,A[],B[],C[],Thres,L,H = 4,121,55,0,8,0,8
i,A[],B[],C[],Thres,L,H = 5,57,93,0,8,0,8
i,A[],B[],C[],Thres,L,H = 6,19,8,0,8,0,8
i,A[],B[],C[],Thres,L,H = 7,46,106,0,8,0,8
Parallel DP = -1
==7525==
==7525== HEAP SUMMARY:
==7525==     in use at exit: 96 bytes in 3 blocks
==7525==   total heap usage: 3 allocs, 0 frees, 96 bytes allocated
==7525==
==7525== 32 bytes in 1 blocks are definitely lost in loss record 1 of 3
==7525==    at 0x4C29B0B: malloc (vg_replace_malloc.c:299)
==7525==    by 0x400840: main (in /home/brodrigu/CS_4230/src/pthreads/SimpleCBugs/a.out)
==7525==
==7525== 32 bytes in 1 blocks are definitely lost in loss record 2 of 3
==7525==    at 0x4C29B0B: malloc (vg_replace_malloc.c:299)
==7525==    by 0x400855: main (in /home/brodrigu/CS_4230/src/pthreads/SimpleCBugs/a.out)
==7525==
==7525== 32 bytes in 1 blocks are definitely lost in loss record 3 of 3
==7525==    at 0x4C29B0B: malloc (vg_replace_malloc.c:299)
==7525==    by 0x400916: main (in /home/brodrigu/CS_4230/src/pthreads/SimpleCBugs/a.out)
==7525==
==7525== LEAK SUMMARY:
==7525==    definitely lost: 96 bytes in 3 blocks
==7525==    indirectly lost: 0 bytes in 0 blocks
==7525==      possibly lost: 0 bytes in 0 blocks
==7525==    still reachable: 0 bytes in 0 blocks
==7525==         suppressed: 0 bytes in 0 blocks
==7525==
==7525== For counts of detected and suppressed errors, rerun with: -v
==7525== ERROR SUMMARY: 3 errors from 3 contexts (suppressed: 0 from 0)